<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.review.manage.userManage.mapper.ReviewUserMapper">
    <select id="getDepNamesByUserIds" resultType="com.review.manage.userManage.vo.SysUserDepVo">
        select sd.depart_name,ru.user_id from review_user ru,sys_depart sd where sd.id = ru.group_id and ru.user_id in
        <foreach collection="userIds" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    <select id="getSysUserDepVoList" resultType="com.review.manage.userManage.vo.SysUserDepVo">
        select group_id as groupIdList,user_id from review_user where user_id in
        <foreach collection="userIds" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    <select id="getDepartNameList" resultType="String">
        select depart_name as departName from sys_depart where id in
        <foreach collection="groupList" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    <update id="updateByUserId" parameterType="com.review.manage.userManage.entity.ReviewUser">
        update review_user
        set user_name = #{userName},sex = #{sex} ,group_id = #{groupId},real_name = #{realName},password = #{password},mobile_phone = #{mobilePhone}
        where user_id = #{userId}
    </update>
    <select id="getResultByUserId" parameterType="String" resultType="com.review.manage.userManage.vo.ReviewResultVo">
        SELECT
            r.result_id resultId,
            c.title title,
            r.create_time createTime,
            r.review_result resultExplain,
            r.grade_total totalGrade
        FROM
            review_result r,
            review_class c
        WHERE
            r.class_id = c.class_id
          AND r.user_id = #{userId}
        ORDER BY
            r.create_time DESC
    </select>
    <delete id="removeRecord" parameterType="String">
        delete from review_result where result_id = #{resultId}
    </delete>
</mapper>