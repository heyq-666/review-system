<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.review.manage.question.mapper.ReviewQuestionMapper">

    <select id="getQuestionListByClassId" parameterType="java.lang.String" resultType="com.review.manage.question.entity.ReviewQuestion">
        SELECT
            q.question_id questionId,
            q.question_num questionNum,
            q.content content,
            q.is_important isImportant,
            q.create_time createTime,
            q.create_by createBy,
            q.question_type questionType,
            q.picture_attach pictureAttach,
            rc.title className
        FROM
            review_question q
                LEFT JOIN review_question_class c ON q.question_id = c.question_id
                LEFT JOIN review_class rc ON c.class_id = rc.class_id
        WHERE
            c.class_id = #{classId}
    </select>

    <select id="getAnswersByQuestionId" parameterType="String" resultType="com.review.manage.question.vo.QuestionVO">
        SELECT
            a.answer_id answerId,
            a.grade selectGrade,
            a.answer_content selectContent,
            a.picture_attach pictureAttach,
            a.answer_code selCode
        FROM
            review_answer a
        WHERE
            a.question_id = #{questionId}
        ORDER BY
            a.answer_code
    </select>

    <delete id="deleteQuestion" parameterType="String">
        delete from review_question
        where
            question_id in
        (
            select question_id from review_question_class where class_id = #{classId}
        )
    </delete>

    <select id="getMaxQuestionId" parameterType="String" resultType="Integer">
        SELECT
            MAX( q.question_num ) questionNum
        FROM
            review_question q,
            review_question_class qc
        WHERE
            q.question_id = qc.question_id
          AND qc.class_id = #{classId}
    </select>

    <select id="getQuestionByQnum" parameterType="map" resultType="com.review.manage.question.entity.ReviewQuestion">
        SELECT
            q.question_num questionNum,
            q.content content,
            q.create_by createBy,
            q.question_id questionId
        FROM
            review_question q,
            review_question_class qc
        WHERE q.question_id = qc.question_id
          AND qc.class_id = #{classId}
          AND q.question_num = #{questionNum}
    </select>
</mapper>
